[package]
name = "raftoral"
version = "0.1.1"
edition = "2024"
authors = ["Ori Shalev"]
license = "MIT"
description = "Fault-tolerant workflow orchestration library using embedded Raft consensus for Rust applications"
homepage = "https://github.com/orishu/raftoral"
repository = "https://github.com/orishu/raftoral"
readme = "README.md"
keywords = ["workflow", "orchestration", "raft", "consensus", "distributed"]
categories = ["asynchronous", "concurrency", "development-tools"]

[dependencies]
raft = "0.7.0"
serde = { version = "1.0.226", features = ["derive"] }
serde_json = "1.0.145"
tokio = { version = "1.47.1", features = ["full"] }
slog = "2.7"
slog-term = "2.9"
slog-async = "2.8"
log = "0.4"
bytes = "1.0"
protobuf = "2.28"
tonic = "0.12"
tonic-reflection = "0.12"
prost = "0.13"
uuid = { version = "1.0", features = ["v4", "serde"] }
clap = { version = "4.5", features = ["derive"] }
env_logger = "0.11"

[dev-dependencies]
port_check = "0.2"

[build-dependencies]
tonic-build = "0.12"
